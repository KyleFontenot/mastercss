it('validates width rules', () => {
    expect(new MasterCSS().create('w:sm')?.text).toContain('width:52.125rem')
    expect(new MasterCSS().create('w:1/4')?.text).toContain('width:25%')
})

test('sizing', () => {
    expect(new MasterCSS().create('w:full')?.text).toContain('width:100%')
    expect(new MasterCSS().create('w:fit')?.text).toContain('width:fit-content')
    expect(new MasterCSS().create('w:max')?.text).toContain('width:max-content')
    expect(new MasterCSS().create('w:min')?.text).toContain('width:min-content')
    expect(new MasterCSS().create('w:4xs')?.text).toContain('width:22.5rem')
    expect(new MasterCSS().create('w:3xs')?.text).toContain('width:30rem')
    expect(new MasterCSS().create('w:2xs')?.text).toContain('width:37.5rem')
    expect(new MasterCSS().create('w:xs')?.text).toContain('width:48rem')
    expect(new MasterCSS().create('w:sm')?.text).toContain('width:52.125rem')
    expect(new MasterCSS().create('w:md')?.text).toContain('width:64rem')
    expect(new MasterCSS().create('w:lg')?.text).toContain('width:80rem')
    expect(new MasterCSS().create('w:xl')?.text).toContain('width:90rem')
    expect(new MasterCSS().create('w:2xl')?.text).toContain('width:100rem')
    expect(new MasterCSS().create('w:3xl')?.text).toContain('width:120rem')
    expect(new MasterCSS().create('w:4xl')?.text).toContain('width:160rem')
})